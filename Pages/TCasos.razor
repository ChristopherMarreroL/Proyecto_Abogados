@page "/tipoc"
@using Microsoft.EntityFrameworkCore
@using PruebaFinal

<PageTitle>Agregar Caso</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <center><h2 class="text-center"><b>Agregar Caso:</b></h2></center>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="nombreCaso" class="form-label"></label>
                        <input @bind="nombreCaso" id="nombreCaso" class="form-control" placeholder="Nombre del Caso:" />
                    </div>

                    <center><button @onclick="AgregarCaso" class="btn btn-primary">Agregar Caso.</button></center>

                    @if (!string.IsNullOrEmpty(mensaje))
                    {
                        <div class="alert alert-success mt-3" role="alert">
                            @mensaje
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string nombreCaso;
    public string mensaje;
    public CasoService casoService;




    protected override void OnInitialized()
    {
        var optionsBuilder = new DbContextOptionsBuilder<ApplicationDbContext>();
        optionsBuilder.UseSqlServer("Server=CHRISTOPHER;Database=MesaDeAbogados;Integrated Security=True;TrustServerCertificate=True;");
        casoService = new CasoService(new ApplicationDbContext(optionsBuilder.Options));
        base.OnInitialized();
    }

    public void AgregarCaso()
    {
        var casoExistente = casoService.GetCasoPorNombre(nombreCaso);

        if (casoExistente != null)
        {
            mensaje = "Caso ya existe";
        }
        else
        {
            var nuevoCaso = new ApplicationDbContext.Caso
                {
                    EstadoCasos = nombreCaso
                };

            casoService.AddCaso(nuevoCaso);
            mensaje = "Caso agregado";
        }
    }

    public class CasoService
    {
        public readonly ApplicationDbContext _context;

        public CasoService(ApplicationDbContext context)
        {
            _context = context;
        }

        public List<ApplicationDbContext.Caso> GetCasos()
        {
            return _context.Casos.ToList();
        }

        public void AddCaso(ApplicationDbContext.Caso caso)
        {
            _context.Casos.Add(caso);
            _context.SaveChanges();
        }

        public ApplicationDbContext.Caso GetCasoPorNombre(string nombreCaso)
        {
            return _context.Casos.FirstOrDefault(c => c.EstadoCasos == nombreCaso);
        }
    }
}

